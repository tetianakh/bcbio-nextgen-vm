---
- name: Upgrade the host OS
  hosts: all
  tasks:
    - name: Upgrade to latest OS packages (apt)
      when: "'{{ansible_distribution}}' in ['Ubuntu', 'Debian'] and {{upgrade_host_os_and_reboot}} | bool"
      sudo: true
      apt: update_cache=yes cache_valid_time=3600 upgrade=dist
      register: os_upgrade_apt

    - name: Upgrade to latest OS packages (yum)
      when: "'{{ansible_distribution}}' in ['RedHat', 'Amazon'] and {{upgrade_host_os_and_reboot}} | bool"
      sudo: true
      yum: update_cache=yes name=* state=latest
      register: os_upgrade_yum

    - name: Reboot
      when: os_upgrade_apt.changed or os_upgrade_yum.changed and "{{upgrade_host_os_and_reboot}} | bool"
      command: shutdown -r now 'Applying OS updates to bcbio cluster'
      sudo: true
      async: 0
      poll: 0
      ignore_errors: true

    - name: Wait for instances to reboot
      when: os_upgrade_apt.changed or os_upgrade_yum.changed and "{{upgrade_host_os_and_reboot}} | bool"
      local_action: wait_for host={{ansible_ssh_host}} port=22 state=started

- name: Install bcbio_vm
  hosts: frontend*
  sudo: false
  vars:
    anaconda_dir: "~{{ansible_user_id}}/install/bcbio-vm/data/anaconda"
  tasks:
    - name: Get Miniconda install script
      get_url:
        url: http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh
        dest: /tmp/Miniconda-latest-Linux-x86_64.sh

    - name: Install Miniconda
      shell: "bash /tmp/Miniconda-latest-Linux-x86_64.sh -b -p {{anaconda_dir}}"
      args:
        creates: "{{anaconda_dir}}/bin/conda"

    - name: Install bcbio_vm
      shell: "{{anaconda_dir}}/bin/conda install --y -c bioconda bcbio-nextgen-vm"

    - name: bcbio_vm.py -- setgid docker
      file:
        path: "{{anaconda_dir}}/bin/bcbio_vm.py"
        owner: "{{ansible_user_id}}"
        group: docker
        mode: '2775'

    - name: Ensure slurmdbd started (deb)
      when: "'{{ansible_distribution}}' in ['Ubuntu', 'Debian']"
      service: name=slurm-llnl-slurmdbd state=started
      ignore_errors: true
      sudo: true

    - name: Ensure slurmdbd started (rpm)
      when: "'{{ansible_distribution}}' in ['CentOS', 'Amazon']"
      service: name=slurmdbd state=started
      ignore_errors: true
      sudo: true

    - name: Add handy alias for SLURM sacct
      lineinfile:
        dest:  ~{{ansible_user_id}}/.bashrc
        line: "alias sacct_std='sacct -s r -s pd -X --format JobID,JobName,Partition,NNodes,AllocCPUS,State,NodeList'"

- name: Update bcbio_vm tools
  hosts: all
  sudo: false
  vars:
    anaconda_dir: "~{{ansible_user_id}}/install/bcbio-vm/data/anaconda"
    data_dir: "~{{ansible_user_id}}/install/bcbio-vm/data"
  tasks:
    - name: install collectl for run stats (deb)
      apt: name=collectl state=present
      when: "'{{ansible_distribution}}' in ['Ubuntu', 'Debian']"
      sudo: true

    - name: install collectl for run stats (rpm)
      yum: name=collectl state=present
      when: "'{{ansible_distribution}}' in ['CentOS', 'Amazon']"
      sudo: true

    - name: Work around for occasional build problems in conda packages (directory)
      file: path=/opt/anaconda1anaconda2anaconda3/ssl state=directory
      sudo: true

    - name: Work around for occasional build problems in conda packages (symlink)
      file: src=/etc/ssl/certs dest=/opt/anaconda1anaconda2anaconda3/ssl/certs state=link
      sudo: true

    - name: Install helpful supplemental tools (deb)
      when: "'{{ansible_distribution}}' in ['Ubuntu', 'Debian']"
      apt:
        name: "{{ item }}"
        update_cache: True
      with_items:
        - git
        - pigz
        - tmux
        - awscli
      sudo: True

    - name: Install helpful supplemental tools (rpm)
      when: "'{{ansible_distribution}}' in ['CentOS', 'Amazon']"
      yum:
        name: "{{ item }}"
      with_items:
        - git
        - pigz
        - tmux
        - awscli
      sudo: True

    - name: Add bcbio_vm.py to PATH
      file:
        src: "{{anaconda_dir}}/bin/bcbio_vm.py"
        dest: /usr/local/bin/bcbio_vm.py
        owner: "{{ansible_user_id}}"
        group: docker
        state: link
      sudo: true

    - name: Upgrade bcbio-vm docker container with tools
      shell: >
        bcbio_vm.py --datadir={{data_dir}} upgrade --tools
        >/tmp/bcbio.log 2>&1
      args:
        executable: /bin/bash
      register: bcbio_vm_doupgrade
      async: 18000
      poll: 30

    - name: Save current configuration
      shell: >
        bcbio_vm.py --datadir={{data_dir}} saveconfig
      args:
        executable: /bin/bash

    - name: Create directory for bcbio_system configuration file
      file: path="{{data_dir}}/galaxy" state=directory

    - name: Add bcbio_system configuration file
      shell: >
        wget -O {{data_dir}}/galaxy/bcbio_system.yaml --no-check-certificate
        https://raw.githubusercontent.com/chapmanb/bcbio-nextgen/master/config/bcbio_system.yaml
      args:
        creates: "{{data_dir}}/galaxy/bcbio_system.yaml"
        executable: /bin/bash

    - command: "tail -100 /tmp/bcbio.log"
      register: bcbio_vm_debug

    - debug: var=bcbio_vm_debug.stdout_lines

- name: Update system configuration
  hosts: frontend*
  sudo: false
  tasks:
    - name: Update bcbio system YAML file with memory and core usage
      shell: >
        bcbio_vm.py devel system {{ target_cores }} {{ target_memory }}
